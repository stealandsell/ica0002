K 13 dets  2023 18:25:53 EET
+ hostname
0000
+ ansible-playbook infra.yaml --diff

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [init : Update APT cache] *************************************************
ok: [stealandsell-2]
ok: [stealandsell-3]
ok: [stealandsell-1]

TASK [init : install packages] *************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : start & enable node exporter] *************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Ensure ca-certificates is up-to-date] *****************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : install rsyslog] **************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : copy conf] ********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : Start & enable] ***************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [init : install duplicity] ************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [init : create backup user] ***********************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [init : create restore directory] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Create template known_hosts] **************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : copy conf] ********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Start & enable] ***************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

PLAY [DNS servers] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : Install bind] *****************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : Enable Bind9] *****************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [bind : copy confs] *******************************************************
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]

TASK [bind : copy master zone file] ********************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Install Bind9 exporter] *******************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [bind : Enable Bind9 exporter] ********************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : Set A records] ****************************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [bind : Set CNAME] ********************************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

PLAY [DNS Resolved] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [dns_resolved : Stop systemd-resolved] ************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [dns_resolved : Change DNS configuration] *********************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

PLAY [Docker] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [docker : Docker package] *************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [docker : Docker service] *************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Install mysql server] ********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : start mysql server] **********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : override] ********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Install Pymsql] **************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : MySQL database] **************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Create MySQL users] **********************************************
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]

TASK [mysql : replica  read-only ON] *******************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Install dependecies] *********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create directory] ************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : copy confs] ******************************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [mysql : Force all notified handlers to run at this point, not waiting for normal sync points] ***

TASK [mysql : Enabled] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : create backup/mysql directory] ***********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Move backup.my.cnf file] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create user backup] **********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : create backup file] **********************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

PLAY [agama] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : Create agama dierectory] *****************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [agama : download dockerfile and agama itself] ****************************
ok: [stealandsell-2] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile', 'dest': '/opt/agama/Dockerfile'})
ok: [stealandsell-1] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile', 'dest': '/opt/agama/Dockerfile'})
ok: [stealandsell-2] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/agama.py', 'dest': '/opt/agama'})
ok: [stealandsell-1] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/agama.py', 'dest': '/opt/agama'})

TASK [agama : build agama] *****************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : run agama instances] *********************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

PLAY [nginx conf] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [nginx : install nginx] ***************************************************
ok: [stealandsell-3]

TASK [nginx : Copy Nginx default config to sites-enabled] **********************
ok: [stealandsell-3]

TASK [nginx : start n enable nginx] ********************************************
ok: [stealandsell-3]

TASK [nginx : Install nginx exporter] ******************************************
ok: [stealandsell-3]

TASK [nginx : Enable exporter] *************************************************
ok: [stealandsell-3]

PLAY [Configure Prometheus] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [prometheus : install prometheus] *****************************************
ok: [stealandsell-3]

TASK [prometheus : copy confs] *************************************************
ok: [stealandsell-3] => (item={'src': 'prometheus.yml.j2', 'dest': '/etc/prometheus/prometheus.yml'})
ok: [stealandsell-3] => (item={'src': 'prometheus.j2', 'dest': '/etc/systemd/system/prometheus.service'})

TASK [prometheus : execute handlers] *******************************************

TASK [prometheus : start prometheus] *******************************************
ok: [stealandsell-3]

PLAY [Configure Grafana] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [grafana : create dirs] ***************************************************
ok: [stealandsell-3] => (item=/opt/grafana/provisioning/dashboards)
ok: [stealandsell-3] => (item=/opt/grafana/provisioning/datasources)

TASK [grafana : copy confs] ****************************************************
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [grafana : Copy jsons] ****************************************************
--- before: /opt/grafana/provisioning/dashboards/main.json
+++ after: /home/q0000/ica0002/roles/grafana/files/main.json
@@ -956,8 +956,8 @@
             "uid": "PBFA97CFB590B2093"
           },
           "disableTextWrap": false,
-          "editorMode": "builder",
-          "expr": "influxdb_write_write_ok{instance=\"stealandsell-3:9424\"}",
+          "editorMode": "code",
+          "expr": "rate(influxdb_write_write_ok{instance=\"stealandsell-3:9424\"}[15m])",
           "fullMetaSearch": false,
           "includeNullMetadata": true,
           "instant": false,
@@ -1331,6 +1331,6 @@
   "timezone": "",
   "title": "Main",
   "uid": "JjQv_Bp4z",
-  "version": 1,
+  "version": 3,
   "weekStart": ""
 }
\ No newline at end of file

changed: [stealandsell-3] => (item=main.json)
ok: [stealandsell-3] => (item=mysql.json)
ok: [stealandsell-3] => (item=syslog.json)

TASK [grafana : run grafna in docker] ******************************************
ok: [stealandsell-3]

PLAY [InfluxDB, Telegraf, pinger] **********************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [influxdb : Download packages] ********************************************
ok: [stealandsell-3] => (item={'url': 'https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb', 'dest': '/opt/influxdb_1.8.10_amd64.deb'})
ok: [stealandsell-3] => (item={'url': 'https://dl.influxdata.com/telegraf/releases/telegraf_1.28.2-1_amd64.deb', 'dest': '/opt/telegraf_1.28.2-1_amd64.deb'})

TASK [influxdb : Install packages] *********************************************
ok: [stealandsell-3] => (item={'deb': '/opt/influxdb_1.8.10_amd64.deb'})
ok: [stealandsell-3] => (item={'deb': '/opt/telegraf_1.28.2-1_amd64.deb'})

TASK [influxdb : Reconfigure telegraf & influxdb] ******************************
ok: [stealandsell-3] => (item={'src': 'telegraf.conf', 'dest': '/etc/telegraf/telegraf.conf'})
ok: [stealandsell-3] => (item={'src': 'influxdb.conf', 'dest': '/etc/telegraf/influxdb.conf'})

TASK [influxdb : Start and enable services] ************************************
ok: [stealandsell-3] => (item=influxdb)
ok: [stealandsell-3] => (item=telegraf)

TASK [influxdb : Prometheus influxdb exporter] *********************************
ok: [stealandsell-3]

TASK [influxdb : Copy service template] ****************************************
ok: [stealandsell-3]

TASK [influxdb : Influxdb Exporter] ********************************************
ok: [stealandsell-3]

TASK [influxdb : create /backup/influxdb directory] ****************************
ok: [stealandsell-3]

TASK [influxdb : Create backup file] *******************************************
ok: [stealandsell-3]

TASK [pinger : Install fping] **************************************************
ok: [stealandsell-3]

TASK [pinger : Add the user "pinger"] ******************************************
ok: [stealandsell-3]

TASK [pinger : Create pinger configuration directory] **************************
ok: [stealandsell-3]

TASK [pinger : Create pinger configuration] ************************************
ok: [stealandsell-3] => (item={'src': 'pinger.conf.j2', 'dest': '/etc/pinger/pinger.conf'})
ok: [stealandsell-3] => (item={'src': 'pinger.service.j2', 'dest': '/etc/systemd/system/pinger.service'})

TASK [pinger : Setup pinger script] ********************************************
ok: [stealandsell-3]

TASK [pinger : start & enable pinger] ******************************************
ok: [stealandsell-3]

PLAY [Keepalived & Keepalived_exporter] ****************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [keepalived : add keepalived_script user] *********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : Install Keepalived] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : Copy keepalived script file] ********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : copy confs] *************************************************
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]

TASK [keepalived : Extract exporter into folder] *******************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [keepalived : execute handlers] *******************************************

TASK [keepalived : Start keepalived on boot] ***********************************
ok: [stealandsell-1] => (item=keepalived)
ok: [stealandsell-2] => (item=keepalived)
ok: [stealandsell-1] => (item=keepalived_exporter)
ok: [stealandsell-2] => (item=keepalived_exporter)

TASK [haproxy : Install haproxy and haproxy exporter] **************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [haproxy : Copy HAproxy conf file] ****************************************
ok: [stealandsell-1] => (item={'src': 'haproxy.conf.j2', 'dest': '/etc/haproxy/haproxy.cfg'})
ok: [stealandsell-2] => (item={'src': 'haproxy.conf.j2', 'dest': '/etc/haproxy/haproxy.cfg'})
ok: [stealandsell-1] => (item={'src': 'haproxy.scrape-uri.j2', 'dest': '/etc/default/prometheus-haproxy-exporter'})
ok: [stealandsell-2] => (item={'src': 'haproxy.scrape-uri.j2', 'dest': '/etc/default/prometheus-haproxy-exporter'})

TASK [haproxy : Start HAproxy on boot] *****************************************
ok: [stealandsell-2] => (item=haproxy)
ok: [stealandsell-1] => (item=haproxy)
ok: [stealandsell-2] => (item=prometheus-haproxy-exporter)
ok: [stealandsell-1] => (item=prometheus-haproxy-exporter)

PLAY RECAP *********************************************************************
stealandsell-1             : ok=57   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
stealandsell-2             : ok=57   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
stealandsell-3             : ok=60   changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

+ ansible-playbook infra.yaml --diff

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : Update APT cache] *************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [init : install packages] *************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : start & enable node exporter] *************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Ensure ca-certificates is up-to-date] *****************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : install rsyslog] **************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : copy conf] ********************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [init : Start & enable] ***************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : install duplicity] ************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : create backup user] ***********************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : create restore directory] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Create template known_hosts] **************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : copy conf] ********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Start & enable] ***************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

PLAY [DNS servers] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [bind : Install bind] *****************************************************
ok: [stealandsell-2]
ok: [stealandsell-3]
ok: [stealandsell-1]

TASK [bind : Enable Bind9] *****************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : copy confs] *******************************************************
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [bind : copy master zone file] ********************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Install Bind9 exporter] *******************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : Enable Bind9 exporter] ********************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [bind : Set A records] ****************************************************
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2]
skipping: [stealandsell-1]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [bind : Set CNAME] ********************************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

PLAY [DNS Resolved] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [dns_resolved : Stop systemd-resolved] ************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [dns_resolved : Change DNS configuration] *********************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

PLAY [Docker] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [docker : Docker package] *************************************************
ok: [stealandsell-2]
ok: [stealandsell-3]
ok: [stealandsell-1]

TASK [docker : Docker service] *************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Install mysql server] ********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : start mysql server] **********************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : override] ********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Install Pymsql] **************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : MySQL database] **************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create MySQL users] **********************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [mysql : replica  read-only ON] *******************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Install dependecies] *********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create directory] ************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : copy confs] ******************************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]

TASK [mysql : Force all notified handlers to run at this point, not waiting for normal sync points] ***

TASK [mysql : Enabled] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : create backup/mysql directory] ***********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Move backup.my.cnf file] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create user backup] **********************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : create backup file] **********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

PLAY [agama] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : Create agama dierectory] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : download dockerfile and agama itself] ****************************
ok: [stealandsell-2] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile', 'dest': '/opt/agama/Dockerfile'})
ok: [stealandsell-1] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile', 'dest': '/opt/agama/Dockerfile'})
ok: [stealandsell-1] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/agama.py', 'dest': '/opt/agama'})
ok: [stealandsell-2] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/agama.py', 'dest': '/opt/agama'})

TASK [agama : build agama] *****************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [agama : run agama instances] *********************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

PLAY [nginx conf] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [nginx : install nginx] ***************************************************
ok: [stealandsell-3]

TASK [nginx : Copy Nginx default config to sites-enabled] **********************
ok: [stealandsell-3]

TASK [nginx : start n enable nginx] ********************************************
ok: [stealandsell-3]

TASK [nginx : Install nginx exporter] ******************************************
ok: [stealandsell-3]

TASK [nginx : Enable exporter] *************************************************
ok: [stealandsell-3]

PLAY [Configure Prometheus] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [prometheus : install prometheus] *****************************************
ok: [stealandsell-3]

TASK [prometheus : copy confs] *************************************************
ok: [stealandsell-3] => (item={'src': 'prometheus.yml.j2', 'dest': '/etc/prometheus/prometheus.yml'})
ok: [stealandsell-3] => (item={'src': 'prometheus.j2', 'dest': '/etc/systemd/system/prometheus.service'})

TASK [prometheus : execute handlers] *******************************************

TASK [prometheus : start prometheus] *******************************************
ok: [stealandsell-3]

PLAY [Configure Grafana] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [grafana : create dirs] ***************************************************
ok: [stealandsell-3] => (item=/opt/grafana/provisioning/dashboards)
ok: [stealandsell-3] => (item=/opt/grafana/provisioning/datasources)

TASK [grafana : copy confs] ****************************************************
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [grafana : Copy jsons] ****************************************************
ok: [stealandsell-3] => (item=main.json)
ok: [stealandsell-3] => (item=mysql.json)
ok: [stealandsell-3] => (item=syslog.json)

TASK [grafana : run grafna in docker] ******************************************
ok: [stealandsell-3]

PLAY [InfluxDB, Telegraf, pinger] **********************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [influxdb : Download packages] ********************************************
ok: [stealandsell-3] => (item={'url': 'https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb', 'dest': '/opt/influxdb_1.8.10_amd64.deb'})
ok: [stealandsell-3] => (item={'url': 'https://dl.influxdata.com/telegraf/releases/telegraf_1.28.2-1_amd64.deb', 'dest': '/opt/telegraf_1.28.2-1_amd64.deb'})

TASK [influxdb : Install packages] *********************************************
ok: [stealandsell-3] => (item={'deb': '/opt/influxdb_1.8.10_amd64.deb'})
ok: [stealandsell-3] => (item={'deb': '/opt/telegraf_1.28.2-1_amd64.deb'})

TASK [influxdb : Reconfigure telegraf & influxdb] ******************************
ok: [stealandsell-3] => (item={'src': 'telegraf.conf', 'dest': '/etc/telegraf/telegraf.conf'})
ok: [stealandsell-3] => (item={'src': 'influxdb.conf', 'dest': '/etc/telegraf/influxdb.conf'})

TASK [influxdb : Start and enable services] ************************************
ok: [stealandsell-3] => (item=influxdb)
ok: [stealandsell-3] => (item=telegraf)

TASK [influxdb : Prometheus influxdb exporter] *********************************
ok: [stealandsell-3]

TASK [influxdb : Copy service template] ****************************************
ok: [stealandsell-3]

TASK [influxdb : Influxdb Exporter] ********************************************
ok: [stealandsell-3]

TASK [influxdb : create /backup/influxdb directory] ****************************
ok: [stealandsell-3]

TASK [influxdb : Create backup file] *******************************************
ok: [stealandsell-3]

TASK [pinger : Install fping] **************************************************
ok: [stealandsell-3]

TASK [pinger : Add the user "pinger"] ******************************************
ok: [stealandsell-3]

TASK [pinger : Create pinger configuration directory] **************************
ok: [stealandsell-3]

TASK [pinger : Create pinger configuration] ************************************
ok: [stealandsell-3] => (item={'src': 'pinger.conf.j2', 'dest': '/etc/pinger/pinger.conf'})
ok: [stealandsell-3] => (item={'src': 'pinger.service.j2', 'dest': '/etc/systemd/system/pinger.service'})

TASK [pinger : Setup pinger script] ********************************************
ok: [stealandsell-3]

TASK [pinger : start & enable pinger] ******************************************
ok: [stealandsell-3]

PLAY [Keepalived & Keepalived_exporter] ****************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : add keepalived_script user] *********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : Install Keepalived] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : Copy keepalived script file] ********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : copy confs] *************************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [keepalived : Extract exporter into folder] *******************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : execute handlers] *******************************************

TASK [keepalived : Start keepalived on boot] ***********************************
ok: [stealandsell-2] => (item=keepalived)
ok: [stealandsell-1] => (item=keepalived)
ok: [stealandsell-2] => (item=keepalived_exporter)
ok: [stealandsell-1] => (item=keepalived_exporter)

TASK [haproxy : Install haproxy and haproxy exporter] **************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [haproxy : Copy HAproxy conf file] ****************************************
ok: [stealandsell-1] => (item={'src': 'haproxy.conf.j2', 'dest': '/etc/haproxy/haproxy.cfg'})
ok: [stealandsell-2] => (item={'src': 'haproxy.conf.j2', 'dest': '/etc/haproxy/haproxy.cfg'})
ok: [stealandsell-1] => (item={'src': 'haproxy.scrape-uri.j2', 'dest': '/etc/default/prometheus-haproxy-exporter'})
ok: [stealandsell-2] => (item={'src': 'haproxy.scrape-uri.j2', 'dest': '/etc/default/prometheus-haproxy-exporter'})

TASK [haproxy : Start HAproxy on boot] *****************************************
ok: [stealandsell-2] => (item=haproxy)
ok: [stealandsell-1] => (item=haproxy)
ok: [stealandsell-2] => (item=prometheus-haproxy-exporter)
ok: [stealandsell-1] => (item=prometheus-haproxy-exporter)

PLAY RECAP *********************************************************************
stealandsell-1             : ok=57   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
stealandsell-2             : ok=57   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
stealandsell-3             : ok=60   changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

+ ansible all -b -m reboot -a test_command=uptime
stealandsell-3 | CHANGED => {
    "changed": true,
    "elapsed": 53,
    "rebooted": true
}
stealandsell-2 | CHANGED => {
    "changed": true,
    "elapsed": 56,
    "rebooted": true
}
stealandsell-1 | CHANGED => {
    "changed": true,
    "elapsed": 63,
    "rebooted": true
}
+ ansible-playbook infra.yaml --diff

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : Update APT cache] *************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [init : install packages] *************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : start & enable node exporter] *************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [init : Ensure ca-certificates is up-to-date] *****************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : install rsyslog] **************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [init : copy conf] ********************************************************
ok: [stealandsell-3]
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [init : Start & enable] ***************************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [init : install duplicity] ************************************************
ok: [stealandsell-3]
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [init : create backup user] ***********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : create restore directory] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

TASK [init : Create template known_hosts] **************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : copy conf] ********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [init : Start & enable] ***************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

PLAY [DNS servers] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [bind : Install bind] *****************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [bind : Enable Bind9] *****************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [bind : copy confs] *******************************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [bind : copy master zone file] ********************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [bind : Execute handlers preemptively] ************************************

TASK [bind : Install Bind9 exporter] *******************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : Enable Bind9 exporter] ********************************************
ok: [stealandsell-3]
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [bind : Set A records] ****************************************************
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [bind : Set CNAME] ********************************************************
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1] => (item=None) 
skipping: [stealandsell-1]
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2] => (item=None) 
skipping: [stealandsell-2]
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

PLAY [DNS Resolved] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [dns_resolved : Stop systemd-resolved] ************************************
ok: [stealandsell-2]
ok: [stealandsell-1]
ok: [stealandsell-3]

TASK [dns_resolved : Change DNS configuration] *********************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

PLAY [Docker] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-3]
ok: [stealandsell-2]

TASK [docker : Docker package] *************************************************
ok: [stealandsell-3]
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [docker : Docker service] *************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]
ok: [stealandsell-3]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Install mysql server] ********************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : start mysql server] **********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : override] ********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Install Pymsql] **************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : MySQL database] **************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Create MySQL users] **********************************************
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]

TASK [mysql : replica  read-only ON] *******************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : Install dependecies] *********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create directory] ************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : copy confs] ******************************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [mysql : Force all notified handlers to run at this point, not waiting for normal sync points] ***

TASK [mysql : Enabled] *********************************************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [mysql : create backup/mysql directory] ***********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Move backup.my.cnf file] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : Create user backup] **********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [mysql : create backup file] **********************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

PLAY [agama] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : Create agama dierectory] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : download dockerfile and agama itself] ****************************
ok: [stealandsell-1] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile', 'dest': '/opt/agama/Dockerfile'})
ok: [stealandsell-2] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile', 'dest': '/opt/agama/Dockerfile'})
ok: [stealandsell-2] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/agama.py', 'dest': '/opt/agama'})
ok: [stealandsell-1] => (item={'src': 'https://raw.githubusercontent.com/hudolejev/agama/master/agama.py', 'dest': '/opt/agama'})

TASK [agama : build agama] *****************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [agama : run agama instances] *********************************************
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]

PLAY [nginx conf] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [nginx : install nginx] ***************************************************
ok: [stealandsell-3]

TASK [nginx : Copy Nginx default config to sites-enabled] **********************
ok: [stealandsell-3]

TASK [nginx : start n enable nginx] ********************************************
ok: [stealandsell-3]

TASK [nginx : Install nginx exporter] ******************************************
ok: [stealandsell-3]

TASK [nginx : Enable exporter] *************************************************
ok: [stealandsell-3]

PLAY [Configure Prometheus] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [prometheus : install prometheus] *****************************************
ok: [stealandsell-3]

TASK [prometheus : copy confs] *************************************************
ok: [stealandsell-3] => (item={'src': 'prometheus.yml.j2', 'dest': '/etc/prometheus/prometheus.yml'})
ok: [stealandsell-3] => (item={'src': 'prometheus.j2', 'dest': '/etc/systemd/system/prometheus.service'})

TASK [prometheus : execute handlers] *******************************************

TASK [prometheus : start prometheus] *******************************************
ok: [stealandsell-3]

PLAY [Configure Grafana] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [grafana : create dirs] ***************************************************
ok: [stealandsell-3] => (item=/opt/grafana/provisioning/dashboards)
ok: [stealandsell-3] => (item=/opt/grafana/provisioning/datasources)

TASK [grafana : copy confs] ****************************************************
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3] => (item=None)
ok: [stealandsell-3]

TASK [grafana : Copy jsons] ****************************************************
ok: [stealandsell-3] => (item=main.json)
ok: [stealandsell-3] => (item=mysql.json)
ok: [stealandsell-3] => (item=syslog.json)

TASK [grafana : run grafna in docker] ******************************************
ok: [stealandsell-3]

PLAY [InfluxDB, Telegraf, pinger] **********************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-3]

TASK [influxdb : Download packages] ********************************************
ok: [stealandsell-3] => (item={'url': 'https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb', 'dest': '/opt/influxdb_1.8.10_amd64.deb'})
ok: [stealandsell-3] => (item={'url': 'https://dl.influxdata.com/telegraf/releases/telegraf_1.28.2-1_amd64.deb', 'dest': '/opt/telegraf_1.28.2-1_amd64.deb'})

TASK [influxdb : Install packages] *********************************************
ok: [stealandsell-3] => (item={'deb': '/opt/influxdb_1.8.10_amd64.deb'})
ok: [stealandsell-3] => (item={'deb': '/opt/telegraf_1.28.2-1_amd64.deb'})

TASK [influxdb : Reconfigure telegraf & influxdb] ******************************
ok: [stealandsell-3] => (item={'src': 'telegraf.conf', 'dest': '/etc/telegraf/telegraf.conf'})
ok: [stealandsell-3] => (item={'src': 'influxdb.conf', 'dest': '/etc/telegraf/influxdb.conf'})

TASK [influxdb : Start and enable services] ************************************
ok: [stealandsell-3] => (item=influxdb)
ok: [stealandsell-3] => (item=telegraf)

TASK [influxdb : Prometheus influxdb exporter] *********************************
ok: [stealandsell-3]

TASK [influxdb : Copy service template] ****************************************
ok: [stealandsell-3]

TASK [influxdb : Influxdb Exporter] ********************************************
ok: [stealandsell-3]

TASK [influxdb : create /backup/influxdb directory] ****************************
ok: [stealandsell-3]

TASK [influxdb : Create backup file] *******************************************
ok: [stealandsell-3]

TASK [pinger : Install fping] **************************************************
ok: [stealandsell-3]

TASK [pinger : Add the user "pinger"] ******************************************
ok: [stealandsell-3]

TASK [pinger : Create pinger configuration directory] **************************
ok: [stealandsell-3]

TASK [pinger : Create pinger configuration] ************************************
ok: [stealandsell-3] => (item={'src': 'pinger.conf.j2', 'dest': '/etc/pinger/pinger.conf'})
ok: [stealandsell-3] => (item={'src': 'pinger.service.j2', 'dest': '/etc/systemd/system/pinger.service'})

TASK [pinger : Setup pinger script] ********************************************
ok: [stealandsell-3]

TASK [pinger : start & enable pinger] ******************************************
ok: [stealandsell-3]

PLAY [Keepalived & Keepalived_exporter] ****************************************

TASK [Gathering Facts] *********************************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : add keepalived_script user] *********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : Install Keepalived] *****************************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : Copy keepalived script file] ********************************
ok: [stealandsell-1]
ok: [stealandsell-2]

TASK [keepalived : copy confs] *************************************************
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-1] => (item=None)
ok: [stealandsell-1]
ok: [stealandsell-2] => (item=None)
ok: [stealandsell-2]

TASK [keepalived : Extract exporter into folder] *******************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [keepalived : execute handlers] *******************************************

TASK [keepalived : Start keepalived on boot] ***********************************
ok: [stealandsell-1] => (item=keepalived)
ok: [stealandsell-2] => (item=keepalived)
ok: [stealandsell-1] => (item=keepalived_exporter)
ok: [stealandsell-2] => (item=keepalived_exporter)

TASK [haproxy : Install haproxy and haproxy exporter] **************************
ok: [stealandsell-2]
ok: [stealandsell-1]

TASK [haproxy : Copy HAproxy conf file] ****************************************
ok: [stealandsell-1] => (item={'src': 'haproxy.conf.j2', 'dest': '/etc/haproxy/haproxy.cfg'})
ok: [stealandsell-2] => (item={'src': 'haproxy.conf.j2', 'dest': '/etc/haproxy/haproxy.cfg'})
ok: [stealandsell-1] => (item={'src': 'haproxy.scrape-uri.j2', 'dest': '/etc/default/prometheus-haproxy-exporter'})
ok: [stealandsell-2] => (item={'src': 'haproxy.scrape-uri.j2', 'dest': '/etc/default/prometheus-haproxy-exporter'})

TASK [haproxy : Start HAproxy on boot] *****************************************
ok: [stealandsell-1] => (item=haproxy)
ok: [stealandsell-2] => (item=haproxy)
ok: [stealandsell-1] => (item=prometheus-haproxy-exporter)
ok: [stealandsell-2] => (item=prometheus-haproxy-exporter)

PLAY RECAP *********************************************************************
stealandsell-1             : ok=57   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
stealandsell-2             : ok=57   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
stealandsell-3             : ok=60   changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

+ date
K 13 dets  2023 18:36:09 EET
